/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MRX } from "../MRX";

export class MRX__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_to: string, overrides?: Overrides): Promise<MRX> {
    return super.deploy(_to, overrides || {}) as Promise<MRX>;
  }
  getDeployTransaction(_to: string, overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(_to, overrides || {});
  }
  attach(address: string): MRX {
    return super.attach(address) as MRX;
  }
  connect(signer: Signer): MRX__factory {
    return super.connect(signer) as MRX__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MRX {
    return new Contract(address, _abi, signerOrProvider) as MRX;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b14380380610b1483398101604081905261002f91610220565b604080518082018252600781526609ad2e4e4dee4b60cb1b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527f9f5b0588e1352f89b54c03bb248b087c845ffce5061ba0b498fb5133815b16a6818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015246608082018190523060a0808401919091528451808403909101815260c09092019093528051910120600355610115826b0a044288bc398d899c00000061011c565b5050610250565b610135816000546101c360201b6104d21790919060201c565b60009081556001600160a01b0383168152600160209081526040909120546101669183906104d26101c3821b17901c565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906101b79085815260200190565b60405180910390a35050565b8181018281101561021a5760405162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000604482015260640160405180910390fd5b92915050565b60006020828403121561023257600080fd5b81516001600160a01b038116811461024957600080fd5b9392505050565b6108b58061025f6000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806306fdde03146100b4578063095ea7b3146100f057806318160ddd1461011357806323b872dd1461012a57806330adf81f1461013d578063313ce567146101525780633644e5151461016c57806370a08231146101755780637ecebe001461019557806395d89b41146101b5578063a9059cbb146101d7578063d505accf146101ea578063dd62ed3e146101ff575b600080fd5b6100da6040518060400160405280600781526020016609ad2e4e4dee4b60cb1b81525081565b6040516100e791906107c2565b60405180910390f35b6101036100fe366004610798565b61022a565b60405190151581526020016100e7565b61011c60005481565b6040519081526020016100e7565b6101036101383660046106e9565b610241565b61011c60008051602061086083398151915281565b61015a601281565b60405160ff90911681526020016100e7565b61011c60035481565b61011c61018336600461069b565b60016020526000908152604090205481565b61011c6101a336600461069b565b60046020526000908152604090205481565b6100da6040518060400160405280600381526020016209aa4b60eb1b81525081565b6101036101e5366004610798565b6102d5565b6101fd6101f8366004610725565b6102e2565b005b61011c61020d3660046106b6565b600260209081526000928352604080842090915290825290205481565b600061023733848461051c565b5060015b92915050565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146102c0576001600160a01b038416600090815260026020908152604080832033845290915290205461029b908361057e565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6102cb8484846105d9565b5060019392505050565b60006102373384846105d9565b428410156103215760405162461bcd60e51b81526020600482015260076024820152661156141254915160ca1b60448201526064015b60405180910390fd5b6003546001600160a01b03881660009081526004602052604081208054919291600080516020610860833981519152918b918b918b9190876103628361082e565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016103db92919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015610446573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061047c5750886001600160a01b0316816001600160a01b0316145b6104bc5760405162461bcd60e51b8152602060048201526011602482015270494e56414c49445f5349474e415455524560781b6044820152606401610318565b6104c789898961051c565b505050505050505050565b8181018281101561023b5760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b6044820152606401610318565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6000818310156105c85760405162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b6044820152606401610318565b6105d28284610817565b9392505050565b6001600160a01b0383166000908152600160205260409020546105fc908261057e565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461062b90826104d2565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105719085815260200190565b80356001600160a01b038116811461069657600080fd5b919050565b6000602082840312156106ad57600080fd5b6105d28261067f565b600080604083850312156106c957600080fd5b6106d28361067f565b91506106e06020840161067f565b90509250929050565b6000806000606084860312156106fe57600080fd5b6107078461067f565b92506107156020850161067f565b9150604084013590509250925092565b600080600080600080600060e0888a03121561074057600080fd5b6107498861067f565b96506107576020890161067f565b95506040880135945060608801359350608088013560ff8116811461077b57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156107ab57600080fd5b6107b48361067f565b946020939093013593505050565b600060208083528351808285015260005b818110156107ef578581018301518582016040015282016107d3565b81811115610801576000604083870101525b50601f01601f1916929092016040019392505050565b60008282101561082957610829610849565b500390565b600060001982141561084257610842610849565b5060010190565b634e487b7160e01b600052601160045260246000fdfe6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9a2646970667358221220c4020dd477cd3d3f1915b9394ccd6747f1c1d3d5c7d8eda9d46df88a1d35173664736f6c63430008050033";
